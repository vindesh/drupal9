<?php

/**
 * @file
 * Functions to support theming in the Bartik theme.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\views\Form\ViewsForm;
use Drupal\Core\Cache\CacheableMetadata;
use Drupal\Core\Cache\RefinableCacheableDependencyInterface;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function screens_preprocess_html(&$variables) {
  // Add information about the number of sidebars.

  // if (!empty($variables['page']['featured_top'])) {
  //   $variables['attributes']['class'][] = 'has-featured-top';
  // }

}

/**
 * Implements hook_preprocess_HOOK() for page title templates.
 */
function screens_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = [
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    ];
    $variables['title_suffix']['shortcut_wrapper'] = [
      '#markup' => '</div>',
      '#weight' => -99,
    ];
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }
}

/**
 * Implements hook_preprocess_HOOK() for maintenance-page.html.twig.
 */
function screens_preprocess_maintenance_page(&$variables) {
  // By default, site_name is set to Drupal if no db connection is available
  // or during site installation. Setting site_name to an empty string makes
  // the site and update pages look cleaner.
  // @see template_preprocess_maintenance_page
  if (!$variables['db_is_active']) {
    $variables['site_name'] = '';
  }

  // Bartik has custom styling for the maintenance page.
  $variables['#attached']['library'][] = 'screens/maintenance_page';
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function screens_preprocess_node(&$variables) {
  //print_r($variables['links']);
  //kint($variables['content']);
  //exit;
  // Remove the "Add new comment" link on teasers or when the comment form is
  // displayed on the page.
  if ($variables['teaser'] || !empty($variables['content']['comments']['comment_form'])) {
    unset($variables['content']['links']['comment']['#links']['comment-add']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function screens_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks.
  if ($variables['plugin_id'] == 'system_branding_block') {
    $variables['attributes']['class'][] = 'clearfix';
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function screens_preprocess_menu(&$variables) {
  //$variables['attributes']['class'][] = 'clearfix';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function screens_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    //$suggestions[] = 'form__search_block_form';
  }
}


/**
 * Implement theme suggestion
 * hook_theme_suggestions_alter()
 */
function screens_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  switch ($hook) {
    case 'block':
      //$route_parem = Drupal::routeMatch()->getRouteName();
      //$block_id = $variables['elements']['#id'];
      $variables['content'] = $variables['elements']['content'];
      if (isset($variables['elements']['content']['#block_content'])) {
        if($block_id = $variables['elements']['content']['#block_content']->id->value)
          $suggestions[] = 'block' . '__' . 'block' . '__' . $block_id;
      }
      break;
    case 'views_view':
      // First Check if it's the news landing view.
      if ($variables['view']->id() === 'section') {
        // Check the display mode.
        switch ($variables['view']->current_display) {
          case 'page_1':
            $suggestions[] = 'views_view' . '__' . 'section' .'_'. 'front_page';
            break;
          default:
            break;
        }
      }
      break;

    default:

      break;
  }
}




/**
 * Implements hook_menu_local_tasks_alter().
 */
function screens_menu_local_tasks_alter(&$local_tasks, $route_name, RefinableCacheableDependencyInterface &$cacheability) {
  //print $route_name ; exit;
  if ($route_name === 'entity.node.revision') {
    // Show the same local tasks on node revision pages as the ones displayed
    // on node canonical pages.
    $node_canonical_local_tasks = \Drupal::service('plugin.manager.menu.local_task')
      ->getLocalTasks('entity.node.canonical');
    $local_tasks['tabs'][0] = $node_canonical_local_tasks['tabs'];

    // Mark the version history local task as active when viewing a node
    // revision.
    foreach ($local_tasks['tabs'][0] as $route_name => &$tab) {
      $tab['#active'] = $route_name === 'entity.node.version_history';

    }

    $cacheability = CacheableMetadata::createFromObject($cacheability)
      ->merge($node_canonical_local_tasks['cacheability']);
  }
}

function screens_local_tasks_alter(&$local_tasks) {
  kint($local_tasks);exit('vindesh');
  // Remove a specified local task plugin.
  unset($local_tasks['example_plugin_id']);
}


/**
 * Implements hook_preprocess_HOOK() for menu-local-task templates.
 */
function screens_preprocess_menu_local_task(&$variables) {
  $variables['link']['#options']['attributes']['class'][] = 'tabs__link';
  $variables['link']['#options']['attributes']['class'][] = 'js-tabs-link';
  print_r($variables['link']);
  exit;

  // Ensure is-active class is set when the tab is active. The generic active
  // link handler applies stricter comparison rules than what is necessary for
  // tabs.
  if (isset($variables['is_active']) && $variables['is_active'] === TRUE) {
    $variables['link']['#options']['attributes']['class'][] = 'is-active';
  }

  if (isset($variables['element']['#level'])) {
    $variables['level'] = $variables['element']['#level'];
  }
}
